import gc
import os

import pandas


def preprocess_data(n_rows):
    print("Preprocessing Data")
    dataframes = load_data(n_rows)
    full_data = pandas.concat(dataframes)

    full_data.rename(columns={'tunnel_parents   label   detailed-label': 'label'}, inplace=True)
    full_data = update_labels(full_data)

    print(full_data['label'].value_counts())

    file_name = "processedData/combined" + str(n_rows) + ".csv"
    full_data.to_csv(file_name)


def load_data(size):
    dataframes = []
    for file in os.listdir("dataset/"):
        if file.endswith('.labeled'):
            try:
                # size + 1 as one row will be dropped later in processing
                dataframe = pandas.read_table(filepath_or_buffer="dataset/" + file, skiprows=6, nrows=size + 1,
                                              low_memory=False)
                dataframe = fix_headers(dataframe)
                dataframe = process_data(dataframe)
                dataframes.append(dataframe)
                del dataframe
                gc.collect()
            except Exception as error:
                print(file)
                print(error)

    return dataframes


def fix_headers(dataframe):
    dataframe.drop(index=0, inplace=True)  # remove data types line

    for i, column in enumerate(dataframe.columns):
        if i != (len(dataframe.columns) - 1):
            dataframe.columns.values[i] = dataframe.columns.values[i + 1]
        else:
            dataframe.columns.values[i] = "Delete"

    dataframe.drop(columns=dataframe.columns[-1], inplace=True)
    return dataframe


def process_data(dataframe):
    dataframe.rename(columns={'tunnel_parents   label   detailed-label': 'label'}, inplace=True)
    y = pandas.DataFrame()
    y['label'] = dataframe['label']
    y.fillna("Benign", inplace=True)

    dataframe['duration'] = dataframe['duration'].replace('-', '0')
    dataframe['orig_bytes'] = dataframe['orig_bytes'].replace('-', '0')
    dataframe['resp_bytes'] = dataframe['resp_bytes'].replace('-', '0')
    dataframe['ts'] = dataframe['ts'].replace("#close", '0.0')
    dataframe.fillna(0, inplace=True)

    dataframe['label'] = y['label']

    return dataframe


def update_labels(dataframe):
    dataframe.loc[(dataframe.label == '-   Malicious   Attack'), 'label'] = 'Attack'
    dataframe.loc[(dataframe.label == '(empty)   Malicious   Attack'), 'label'] = 'Attack'

    dataframe.loc[(dataframe.label == '-   Benign   -'), 'label'] = 'Benign'
    dataframe.loc[(dataframe.label == '-   benign   -'), 'label'] = 'Benign'
    dataframe.loc[(dataframe.label == '(empty)   Benign   -'), 'label'] = 'Benign'
    dataframe.loc[(dataframe.label == '0'), 'label'] = 'Benign'

    dataframe.loc[(dataframe.label == '-   Malicious   C&C'), 'label'] = 'C&C'
    dataframe.loc[(dataframe.label == '(empty)   Malicious   C&C'), 'label'] = 'C&C'
    dataframe.loc[(dataframe.label == '-   Malicious   C&C-HeartBeat'), 'label'] = 'C&C'
    dataframe.loc[(dataframe.label == '-   Malicious   C&C-HeartBeat-Attack'), 'label'] = 'C&C'
    dataframe.loc[(dataframe.label == '(empty)   Malicious   C&C-HeartBeat'), 'label'] = 'C&C'
    dataframe.loc[(dataframe.label == '-   Malicious   C&C-FileDownload'), 'label'] = 'C&C'
    dataframe.loc[(dataframe.label == '-   Malicious   C&C-Torii'), 'label'] = 'C&C'
    dataframe.loc[(dataframe.label == '-   Malicious   C&C-HeartBeat-FileDownload'), 'label'] = 'C&C'
    dataframe.loc[(dataframe.label == '-   Malicious   C&C-Mirai'), 'label'] = 'C&C'
    dataframe.loc[(dataframe.label == '-   Malicious   C&C-PartOfAHorizontalPortScan'), 'label'] = 'C&C'

    dataframe.loc[(dataframe.label == '-   Malicious   DDoS'), 'label'] = 'DDoS'
    dataframe.loc[(dataframe.label == '(empty)   Malicious   DDoS'), 'label'] = 'DDoS'

    dataframe.loc[(dataframe.label == '-   Malicious   FileDownload'), 'label'] = 'FileDownload'

    dataframe.loc[(dataframe.label == '-   Malicious   Okiru'), 'label'] = 'Okiru'
    dataframe.loc[(dataframe.label == '(empty)   Malicious   Okiru'), 'label'] = 'Okiru'
    dataframe.loc[(dataframe.label == '-   Malicious   Okiru-Attack'), 'label'] = 'Okiru'

    dataframe.loc[
        (dataframe.label == '-   Malicious   PartOfAHorizontalPortScan'), 'label'] = 'PartOfAHorizontalPortScan'
    dataframe.loc[
        (dataframe.label == '(empty)   Malicious   PartOfAHorizontalPortScan'), 'label'] = 'PartOfAHorizontalPortScan'
    dataframe.loc[
        (dataframe.label == '-   Malicious   PartOfAHorizontalPortScan-Attack'), 'label'] = 'PartOfAHorizontalPortScan'
    return dataframe
